name: redes_prac1

services:
  db_dev:
    image: postgres:16-alpine
    container_name: db_dev
    env_file: .env.dev
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - vol_dev:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - red_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost -p 5432"]
      interval: 5s
      timeout: 2s
      retries: 10

  web_dev:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: web_dev
    depends_on:
      db_dev:
        condition: service_healthy
    env_file: .env.dev
    ports:
      - "${WEB_PORT}:8000"
    networks:
      - red_dev
    healthcheck:
      test:
        - CMD-SHELL
        - >
          python - << 'PY'
          import json, urllib.request, sys
          try:
              j = json.load(urllib.request.urlopen('http://localhost:8000/status'))
              sys.exit(0 if j.get('db_connected') else 1)
          except:
              sys.exit(1)
          PY
      interval: 10s
      timeout: 3s
      retries: 10

networks:
  red_dev:
    name: red_dev  # nombre fijo de la red dev

volumes:
  vol_dev:
    name: vol_dev  # nombre fijo del volumen dev
